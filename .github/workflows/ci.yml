name: test
on: [ push ]
jobs:
  check_style:
    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      JVM_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup jdk
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
      - name: setup cache
        uses: coursier/cache-action@v6
      - name: check style
        run: sbt scalafmtSbtCheck scalafmtCheckAll
  test:
    needs: [ check_style ]
    strategy:
      fail-fast: false
      matrix:
        spark_version: [ '3.3.0','3.2.2','3.1.3','3.0.3' ]
    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      JVM_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup jdk
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
      - name: setup cache
        uses: coursier/cache-action@v6
      - name: compile
        run: sbt -Dyasp.spark.version=${{ matrix.spark_version }} compile
      - name: test
        run: sbt -Dyasp.spark.version=${{ matrix.spark_version }} clean coverage test coverageAggregate
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v2
        if: matrix.spark_version == '3.3.0'
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
  build:
    needs: [ test ]
    strategy:
      fail-fast: false
      matrix:
        spark_version: [ '3.3.0','3.2.2','3.1.3','3.0.3']
    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      JVM_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup jdk
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
      - name: setup cache
        uses: coursier/cache-action@v6
      - name: build
        run: sbt -Dyasp.spark.version=${{ matrix.spark_version }} assembly
      - name: build light
        run: sbt -Dyasp.spark.version=${{ matrix.spark_version }} -Dyasp.build.type=LIGHT assembly
      - name: archive yasp built jars
        uses: actions/upload-artifact@v3
        with:
          name: yasp-app-${{ matrix.spark_version }}-jar
          path: |
            yasp-app/target/scala-2.12/yasp-app-*.jar
      - name: cleanup cache
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/Library/Caches/Coursier/v1 -name "ivydata-*.properties" -delete || true
          find $HOME/.ivy2/cache                -name "ivydata-*.properties" -delete || true
          find $HOME/.cache/coursier/v1         -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                       -name "*.lock"               -delete || true
